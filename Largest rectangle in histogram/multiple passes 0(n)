class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();//size of array
        vector<int> lse(n);//array for left smaller element
        vector<int> rse(n);//array for right smaller element
        stack<int> st;
        //calculating lse
        for(int i=0;i<n;i++)
        {
            while(!st.empty()&& heights[st.top()]>=heights[i])
            {
                st.pop();
            }
            if(st.empty()==false)
                lse[i]=st.top()+1;
            else
                lse[i]=0;
            st.push(i);
        }
        //Empty the stack for reuse
        while(st.empty()==false)
            st.pop();
        //calculating rse
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty()&& heights[st.top()]>=heights[i])
            {
                st.pop();
            }
            if(st.empty()==false)
                rse[i]=st.top()-1;
            else
                rse[i]=n-1;
            st.push(i);
        }
        int res=0;
        for(int i=0;i<n;i++)
            res=max(res,heights[i]*(rse[i]-lse[i]+1));
        return res;  
    }
};
